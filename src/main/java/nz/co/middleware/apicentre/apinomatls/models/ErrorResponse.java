/*
 * AccountAndTransactionAPISpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package nz.co.middleware.apicentre.apinomatls.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for ErrorResponse type.
 */
public class ErrorResponse {
    private String code;
    private String id;
    private String message;
    private List<Error> errors;

    /**
     * Default constructor.
     */
    public ErrorResponse() {
    }

    /**
     * Initialization constructor.
     * @param  code  String value for code.
     * @param  message  String value for message.
     * @param  errors  List of Error value for errors.
     * @param  id  String value for id.
     */
    public ErrorResponse(
            String code,
            String message,
            List<Error> errors,
            String id) {
        this.code = code;
        this.id = id;
        this.message = message;
        this.errors = errors;
    }

    /**
     * Getter for Code.
     * High level textual error code to help categorise the errors.
     * @return Returns the String
     */
    @JsonGetter("Code")
    public String getCode() {
        return code;
    }

    /**
     * Setter for Code.
     * High level textual error code to help categorise the errors.
     * @param code Value for String
     */
    @JsonSetter("Code")
    public void setCode(String code) {
        this.code = code;
    }

    /**
     * Getter for Id.
     * A unique reference for the error instance, for audit purposes, in case of
     * unknown/unclassified errors.
     * @return Returns the String
     */
    @JsonGetter("Id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * A unique reference for the error instance, for audit purposes, in case of
     * unknown/unclassified errors.
     * @param id Value for String
     */
    @JsonSetter("Id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Message.
     * Brief Error message. E.g., 'There is something wrong with the request parameters provided'
     * @return Returns the String
     */
    @JsonGetter("Message")
    public String getMessage() {
        return message;
    }

    /**
     * Setter for Message.
     * Brief Error message. E.g., 'There is something wrong with the request parameters provided'
     * @param message Value for String
     */
    @JsonSetter("Message")
    public void setMessage(String message) {
        this.message = message;
    }

    /**
     * Getter for Errors.
     * @return Returns the List of Error
     */
    @JsonGetter("Errors")
    public List<Error> getErrors() {
        return errors;
    }

    /**
     * Setter for Errors.
     * @param errors Value for List of Error
     */
    @JsonSetter("Errors")
    public void setErrors(List<Error> errors) {
        this.errors = errors;
    }

    /**
     * Converts this ErrorResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ErrorResponse [" + "code=" + code + ", message=" + message + ", errors=" + errors
                + ", id=" + id + "]";
    }

    /**
     * Builds a new {@link ErrorResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ErrorResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(code, message, errors)
                .id(getId());
        return builder;
    }

    /**
     * Class to build instances of {@link ErrorResponse}.
     */
    public static class Builder {
        private String code;
        private String message;
        private List<Error> errors;
        private String id;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  code  String value for code.
         * @param  message  String value for message.
         * @param  errors  List of Error value for errors.
         */
        public Builder(String code, String message, List<Error> errors) {
            this.code = code;
            this.message = message;
            this.errors = errors;
        }

        /**
         * Setter for code.
         * @param  code  String value for code.
         * @return Builder
         */
        public Builder code(String code) {
            this.code = code;
            return this;
        }

        /**
         * Setter for message.
         * @param  message  String value for message.
         * @return Builder
         */
        public Builder message(String message) {
            this.message = message;
            return this;
        }

        /**
         * Setter for errors.
         * @param  errors  List of Error value for errors.
         * @return Builder
         */
        public Builder errors(List<Error> errors) {
            this.errors = errors;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Builds a new {@link ErrorResponse} object using the set fields.
         * @return {@link ErrorResponse}
         */
        public ErrorResponse build() {
            return new ErrorResponse(code, message, errors, id);
        }
    }
}
