/*
 * AccountAndTransactionAPISpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package nz.co.middleware.apicentre.apinomatls.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDateTime;
import nz.co.middleware.apicentre.apinomatls.DateTimeHelper;

/**
 * This is a model class for StandingOrderModel type.
 */
public class StandingOrderModel {
    private String accountId;
    private String standingOrderId;
    private String frequency;
    private Reference reference;
    private LocalDateTime firstPaymentDateTime;
    private FirstPaymentAmount firstPaymentAmount;
    private LocalDateTime nextPaymentDateTime;
    private NextPaymentAmount nextPaymentAmount;
    private LocalDateTime finalPaymentDateTime;
    private FinalPaymentAmount finalPaymentAmount;
    private StandingOrderStatusCodeEnum standingOrderStatusCode;
    private CreditorAgent creditorAgent;
    private CreditorAccount creditorAccount;

    /**
     * Default constructor.
     */
    public StandingOrderModel() {
    }

    /**
     * Initialization constructor.
     * @param  accountId  String value for accountId.
     * @param  frequency  String value for frequency.
     * @param  nextPaymentDateTime  LocalDateTime value for nextPaymentDateTime.
     * @param  nextPaymentAmount  NextPaymentAmount value for nextPaymentAmount.
     * @param  standingOrderId  String value for standingOrderId.
     * @param  reference  Reference value for reference.
     * @param  firstPaymentDateTime  LocalDateTime value for firstPaymentDateTime.
     * @param  firstPaymentAmount  FirstPaymentAmount value for firstPaymentAmount.
     * @param  finalPaymentDateTime  LocalDateTime value for finalPaymentDateTime.
     * @param  finalPaymentAmount  FinalPaymentAmount value for finalPaymentAmount.
     * @param  standingOrderStatusCode  StandingOrderStatusCodeEnum value for
     *         standingOrderStatusCode.
     * @param  creditorAgent  CreditorAgent value for creditorAgent.
     * @param  creditorAccount  CreditorAccount value for creditorAccount.
     */
    public StandingOrderModel(
            String accountId,
            String frequency,
            LocalDateTime nextPaymentDateTime,
            NextPaymentAmount nextPaymentAmount,
            String standingOrderId,
            Reference reference,
            LocalDateTime firstPaymentDateTime,
            FirstPaymentAmount firstPaymentAmount,
            LocalDateTime finalPaymentDateTime,
            FinalPaymentAmount finalPaymentAmount,
            StandingOrderStatusCodeEnum standingOrderStatusCode,
            CreditorAgent creditorAgent,
            CreditorAccount creditorAccount) {
        this.accountId = accountId;
        this.standingOrderId = standingOrderId;
        this.frequency = frequency;
        this.reference = reference;
        this.firstPaymentDateTime = firstPaymentDateTime;
        this.firstPaymentAmount = firstPaymentAmount;
        this.nextPaymentDateTime = nextPaymentDateTime;
        this.nextPaymentAmount = nextPaymentAmount;
        this.finalPaymentDateTime = finalPaymentDateTime;
        this.finalPaymentAmount = finalPaymentAmount;
        this.standingOrderStatusCode = standingOrderStatusCode;
        this.creditorAgent = creditorAgent;
        this.creditorAccount = creditorAccount;
    }

    /**
     * Getter for AccountId.
     * A unique and immutable identifier used to identify the account resource. This identifier has
     * no meaning to the account owner.
     * @return Returns the String
     */
    @JsonGetter("AccountId")
    public String getAccountId() {
        return accountId;
    }

    /**
     * Setter for AccountId.
     * A unique and immutable identifier used to identify the account resource. This identifier has
     * no meaning to the account owner.
     * @param accountId Value for String
     */
    @JsonSetter("AccountId")
    public void setAccountId(String accountId) {
        this.accountId = accountId;
    }

    /**
     * Getter for StandingOrderId.
     * A unique and immutable identifier used to identify the standing order resource. This
     * identifier has no meaning to the account owner.
     * @return Returns the String
     */
    @JsonGetter("StandingOrderId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getStandingOrderId() {
        return standingOrderId;
    }

    /**
     * Setter for StandingOrderId.
     * A unique and immutable identifier used to identify the standing order resource. This
     * identifier has no meaning to the account owner.
     * @param standingOrderId Value for String
     */
    @JsonSetter("StandingOrderId")
    public void setStandingOrderId(String standingOrderId) {
        this.standingOrderId = standingOrderId;
    }

    /**
     * Getter for Frequency.
     * EvryDay - Every day EvryWorkgDay - Every working day IntrvlWkDay - An interval specified in
     * weeks (01 to 09), and the day within the week (01 to 07) WkInMnthDay - A monthly interval,
     * specifying the week of the month (01 to 05) and day within the week (01 to 07) IntrvlMnthDay
     * - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the
     * month (-5 to -1, 1 to 31) Patterns: EvryDay (ScheduleCode) EvryWorkgDay (ScheduleCode)
     * IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek)
     * WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)
     * IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth) The
     * regular expression for this element combines five smaller versions for each permitted
     * pattern. To aid legibility - the components are presented individually here: EvryDay
     * EvryWorkgDay IntrvlWkDay:0[1-9]:0[1-7] WkInMnthDay:0[1-5]:0[1-7]
     * IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])
     * @return Returns the String
     */
    @JsonGetter("Frequency")
    public String getFrequency() {
        return frequency;
    }

    /**
     * Setter for Frequency.
     * EvryDay - Every day EvryWorkgDay - Every working day IntrvlWkDay - An interval specified in
     * weeks (01 to 09), and the day within the week (01 to 07) WkInMnthDay - A monthly interval,
     * specifying the week of the month (01 to 05) and day within the week (01 to 07) IntrvlMnthDay
     * - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the
     * month (-5 to -1, 1 to 31) Patterns: EvryDay (ScheduleCode) EvryWorkgDay (ScheduleCode)
     * IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek)
     * WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)
     * IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth) The
     * regular expression for this element combines five smaller versions for each permitted
     * pattern. To aid legibility - the components are presented individually here: EvryDay
     * EvryWorkgDay IntrvlWkDay:0[1-9]:0[1-7] WkInMnthDay:0[1-5]:0[1-7]
     * IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])
     * @param frequency Value for String
     */
    @JsonSetter("Frequency")
    public void setFrequency(String frequency) {
        this.frequency = frequency;
    }

    /**
     * Getter for Reference.
     * @return Returns the Reference
     */
    @JsonGetter("Reference")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Reference getReference() {
        return reference;
    }

    /**
     * Setter for Reference.
     * @param reference Value for Reference
     */
    @JsonSetter("Reference")
    public void setReference(Reference reference) {
        this.reference = reference;
    }

    /**
     * Getter for FirstPaymentDateTime.
     * The date on which the first payment for a Standing Order schedule will be made. All dates in
     * the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in
     * responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00
     * @return Returns the LocalDateTime
     */
    @JsonGetter("FirstPaymentDateTime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getFirstPaymentDateTime() {
        return firstPaymentDateTime;
    }

    /**
     * Setter for FirstPaymentDateTime.
     * The date on which the first payment for a Standing Order schedule will be made. All dates in
     * the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in
     * responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00
     * @param firstPaymentDateTime Value for LocalDateTime
     */
    @JsonSetter("FirstPaymentDateTime")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setFirstPaymentDateTime(LocalDateTime firstPaymentDateTime) {
        this.firstPaymentDateTime = firstPaymentDateTime;
    }

    /**
     * Getter for FirstPaymentAmount.
     * The amount of the first Standing Order
     * @return Returns the FirstPaymentAmount
     */
    @JsonGetter("FirstPaymentAmount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public FirstPaymentAmount getFirstPaymentAmount() {
        return firstPaymentAmount;
    }

    /**
     * Setter for FirstPaymentAmount.
     * The amount of the first Standing Order
     * @param firstPaymentAmount Value for FirstPaymentAmount
     */
    @JsonSetter("FirstPaymentAmount")
    public void setFirstPaymentAmount(FirstPaymentAmount firstPaymentAmount) {
        this.firstPaymentAmount = firstPaymentAmount;
    }

    /**
     * Getter for NextPaymentDateTime.
     * The date on which the next payment for a Standing Order schedule will be made. All dates in
     * the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in
     * responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00
     * @return Returns the LocalDateTime
     */
    @JsonGetter("NextPaymentDateTime")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getNextPaymentDateTime() {
        return nextPaymentDateTime;
    }

    /**
     * Setter for NextPaymentDateTime.
     * The date on which the next payment for a Standing Order schedule will be made. All dates in
     * the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in
     * responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00
     * @param nextPaymentDateTime Value for LocalDateTime
     */
    @JsonSetter("NextPaymentDateTime")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setNextPaymentDateTime(LocalDateTime nextPaymentDateTime) {
        this.nextPaymentDateTime = nextPaymentDateTime;
    }

    /**
     * Getter for NextPaymentAmount.
     * The amount of the next Standing Order
     * @return Returns the NextPaymentAmount
     */
    @JsonGetter("NextPaymentAmount")
    public NextPaymentAmount getNextPaymentAmount() {
        return nextPaymentAmount;
    }

    /**
     * Setter for NextPaymentAmount.
     * The amount of the next Standing Order
     * @param nextPaymentAmount Value for NextPaymentAmount
     */
    @JsonSetter("NextPaymentAmount")
    public void setNextPaymentAmount(NextPaymentAmount nextPaymentAmount) {
        this.nextPaymentAmount = nextPaymentAmount;
    }

    /**
     * Getter for FinalPaymentDateTime.
     * The date on which the final payment for a Standing Order schedule will be made. All dates in
     * the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in
     * responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00
     * @return Returns the LocalDateTime
     */
    @JsonGetter("FinalPaymentDateTime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getFinalPaymentDateTime() {
        return finalPaymentDateTime;
    }

    /**
     * Setter for FinalPaymentDateTime.
     * The date on which the final payment for a Standing Order schedule will be made. All dates in
     * the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in
     * responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00
     * @param finalPaymentDateTime Value for LocalDateTime
     */
    @JsonSetter("FinalPaymentDateTime")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setFinalPaymentDateTime(LocalDateTime finalPaymentDateTime) {
        this.finalPaymentDateTime = finalPaymentDateTime;
    }

    /**
     * Getter for FinalPaymentAmount.
     * The amount of the final Standing Order
     * @return Returns the FinalPaymentAmount
     */
    @JsonGetter("FinalPaymentAmount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public FinalPaymentAmount getFinalPaymentAmount() {
        return finalPaymentAmount;
    }

    /**
     * Setter for FinalPaymentAmount.
     * The amount of the final Standing Order
     * @param finalPaymentAmount Value for FinalPaymentAmount
     */
    @JsonSetter("FinalPaymentAmount")
    public void setFinalPaymentAmount(FinalPaymentAmount finalPaymentAmount) {
        this.finalPaymentAmount = finalPaymentAmount;
    }

    /**
     * Getter for StandingOrderStatusCode.
     * Specifies the status of the standing order in code form.
     * @return Returns the StandingOrderStatusCodeEnum
     */
    @JsonGetter("StandingOrderStatusCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public StandingOrderStatusCodeEnum getStandingOrderStatusCode() {
        return standingOrderStatusCode;
    }

    /**
     * Setter for StandingOrderStatusCode.
     * Specifies the status of the standing order in code form.
     * @param standingOrderStatusCode Value for StandingOrderStatusCodeEnum
     */
    @JsonSetter("StandingOrderStatusCode")
    public void setStandingOrderStatusCode(StandingOrderStatusCodeEnum standingOrderStatusCode) {
        this.standingOrderStatusCode = standingOrderStatusCode;
    }

    /**
     * Getter for CreditorAgent.
     * Party that manages the account on behalf of the account owner, that is manages the
     * registration and booking of entries on the account, calculates balances on the account and
     * provides information about the account. This is the servicer of the beneficiary account.
     * @return Returns the CreditorAgent
     */
    @JsonGetter("CreditorAgent")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CreditorAgent getCreditorAgent() {
        return creditorAgent;
    }

    /**
     * Setter for CreditorAgent.
     * Party that manages the account on behalf of the account owner, that is manages the
     * registration and booking of entries on the account, calculates balances on the account and
     * provides information about the account. This is the servicer of the beneficiary account.
     * @param creditorAgent Value for CreditorAgent
     */
    @JsonSetter("CreditorAgent")
    public void setCreditorAgent(CreditorAgent creditorAgent) {
        this.creditorAgent = creditorAgent;
    }

    /**
     * Getter for CreditorAccount.
     * Unambiguous identification of the account of the creditor, in the case of a debit
     * transaction.
     * @return Returns the CreditorAccount
     */
    @JsonGetter("CreditorAccount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CreditorAccount getCreditorAccount() {
        return creditorAccount;
    }

    /**
     * Setter for CreditorAccount.
     * Unambiguous identification of the account of the creditor, in the case of a debit
     * transaction.
     * @param creditorAccount Value for CreditorAccount
     */
    @JsonSetter("CreditorAccount")
    public void setCreditorAccount(CreditorAccount creditorAccount) {
        this.creditorAccount = creditorAccount;
    }

    /**
     * Converts this StandingOrderModel into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "StandingOrderModel [" + "accountId=" + accountId + ", frequency=" + frequency
                + ", nextPaymentDateTime=" + nextPaymentDateTime + ", nextPaymentAmount="
                + nextPaymentAmount + ", standingOrderId=" + standingOrderId + ", reference="
                + reference + ", firstPaymentDateTime=" + firstPaymentDateTime
                + ", firstPaymentAmount=" + firstPaymentAmount + ", finalPaymentDateTime="
                + finalPaymentDateTime + ", finalPaymentAmount=" + finalPaymentAmount
                + ", standingOrderStatusCode=" + standingOrderStatusCode + ", creditorAgent="
                + creditorAgent + ", creditorAccount=" + creditorAccount + "]";
    }

    /**
     * Builds a new {@link StandingOrderModel.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link StandingOrderModel.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(accountId, frequency, nextPaymentDateTime, nextPaymentAmount)
                .standingOrderId(getStandingOrderId())
                .reference(getReference())
                .firstPaymentDateTime(getFirstPaymentDateTime())
                .firstPaymentAmount(getFirstPaymentAmount())
                .finalPaymentDateTime(getFinalPaymentDateTime())
                .finalPaymentAmount(getFinalPaymentAmount())
                .standingOrderStatusCode(getStandingOrderStatusCode())
                .creditorAgent(getCreditorAgent())
                .creditorAccount(getCreditorAccount());
        return builder;
    }

    /**
     * Class to build instances of {@link StandingOrderModel}.
     */
    public static class Builder {
        private String accountId;
        private String frequency;
        private LocalDateTime nextPaymentDateTime;
        private NextPaymentAmount nextPaymentAmount;
        private String standingOrderId;
        private Reference reference;
        private LocalDateTime firstPaymentDateTime;
        private FirstPaymentAmount firstPaymentAmount;
        private LocalDateTime finalPaymentDateTime;
        private FinalPaymentAmount finalPaymentAmount;
        private StandingOrderStatusCodeEnum standingOrderStatusCode;
        private CreditorAgent creditorAgent;
        private CreditorAccount creditorAccount;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  accountId  String value for accountId.
         * @param  frequency  String value for frequency.
         * @param  nextPaymentDateTime  LocalDateTime value for nextPaymentDateTime.
         * @param  nextPaymentAmount  NextPaymentAmount value for nextPaymentAmount.
         */
        public Builder(String accountId, String frequency, LocalDateTime nextPaymentDateTime,
                NextPaymentAmount nextPaymentAmount) {
            this.accountId = accountId;
            this.frequency = frequency;
            this.nextPaymentDateTime = nextPaymentDateTime;
            this.nextPaymentAmount = nextPaymentAmount;
        }

        /**
         * Setter for accountId.
         * @param  accountId  String value for accountId.
         * @return Builder
         */
        public Builder accountId(String accountId) {
            this.accountId = accountId;
            return this;
        }

        /**
         * Setter for frequency.
         * @param  frequency  String value for frequency.
         * @return Builder
         */
        public Builder frequency(String frequency) {
            this.frequency = frequency;
            return this;
        }

        /**
         * Setter for nextPaymentDateTime.
         * @param  nextPaymentDateTime  LocalDateTime value for nextPaymentDateTime.
         * @return Builder
         */
        public Builder nextPaymentDateTime(LocalDateTime nextPaymentDateTime) {
            this.nextPaymentDateTime = nextPaymentDateTime;
            return this;
        }

        /**
         * Setter for nextPaymentAmount.
         * @param  nextPaymentAmount  NextPaymentAmount value for nextPaymentAmount.
         * @return Builder
         */
        public Builder nextPaymentAmount(NextPaymentAmount nextPaymentAmount) {
            this.nextPaymentAmount = nextPaymentAmount;
            return this;
        }

        /**
         * Setter for standingOrderId.
         * @param  standingOrderId  String value for standingOrderId.
         * @return Builder
         */
        public Builder standingOrderId(String standingOrderId) {
            this.standingOrderId = standingOrderId;
            return this;
        }

        /**
         * Setter for reference.
         * @param  reference  Reference value for reference.
         * @return Builder
         */
        public Builder reference(Reference reference) {
            this.reference = reference;
            return this;
        }

        /**
         * Setter for firstPaymentDateTime.
         * @param  firstPaymentDateTime  LocalDateTime value for firstPaymentDateTime.
         * @return Builder
         */
        public Builder firstPaymentDateTime(LocalDateTime firstPaymentDateTime) {
            this.firstPaymentDateTime = firstPaymentDateTime;
            return this;
        }

        /**
         * Setter for firstPaymentAmount.
         * @param  firstPaymentAmount  FirstPaymentAmount value for firstPaymentAmount.
         * @return Builder
         */
        public Builder firstPaymentAmount(FirstPaymentAmount firstPaymentAmount) {
            this.firstPaymentAmount = firstPaymentAmount;
            return this;
        }

        /**
         * Setter for finalPaymentDateTime.
         * @param  finalPaymentDateTime  LocalDateTime value for finalPaymentDateTime.
         * @return Builder
         */
        public Builder finalPaymentDateTime(LocalDateTime finalPaymentDateTime) {
            this.finalPaymentDateTime = finalPaymentDateTime;
            return this;
        }

        /**
         * Setter for finalPaymentAmount.
         * @param  finalPaymentAmount  FinalPaymentAmount value for finalPaymentAmount.
         * @return Builder
         */
        public Builder finalPaymentAmount(FinalPaymentAmount finalPaymentAmount) {
            this.finalPaymentAmount = finalPaymentAmount;
            return this;
        }

        /**
         * Setter for standingOrderStatusCode.
         * @param  standingOrderStatusCode  StandingOrderStatusCodeEnum value for
         *         standingOrderStatusCode.
         * @return Builder
         */
        public Builder standingOrderStatusCode(
                StandingOrderStatusCodeEnum standingOrderStatusCode) {
            this.standingOrderStatusCode = standingOrderStatusCode;
            return this;
        }

        /**
         * Setter for creditorAgent.
         * @param  creditorAgent  CreditorAgent value for creditorAgent.
         * @return Builder
         */
        public Builder creditorAgent(CreditorAgent creditorAgent) {
            this.creditorAgent = creditorAgent;
            return this;
        }

        /**
         * Setter for creditorAccount.
         * @param  creditorAccount  CreditorAccount value for creditorAccount.
         * @return Builder
         */
        public Builder creditorAccount(CreditorAccount creditorAccount) {
            this.creditorAccount = creditorAccount;
            return this;
        }

        /**
         * Builds a new {@link StandingOrderModel} object using the set fields.
         * @return {@link StandingOrderModel}
         */
        public StandingOrderModel build() {
            return new StandingOrderModel(accountId, frequency, nextPaymentDateTime,
                    nextPaymentAmount, standingOrderId, reference, firstPaymentDateTime,
                    firstPaymentAmount, finalPaymentDateTime, finalPaymentAmount,
                    standingOrderStatusCode, creditorAgent, creditorAccount);
        }
    }
}
