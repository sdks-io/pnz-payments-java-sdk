/*
 * AccountAndTransactionAPISpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package nz.co.middleware.apicentre.apinomatls.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDateTime;
import java.util.List;
import nz.co.middleware.apicentre.apinomatls.DateTimeHelper;

/**
 * This is a model class for BalanceModel type.
 */
public class BalanceModel {
    private String accountId;
    private Amount amount;
    private CreditDebitIndicatorEnum creditDebitIndicator;
    private BalanceModelTypeEnum type;
    private LocalDateTime dateTime;
    private List<CreditLine> creditLine;

    /**
     * Default constructor.
     */
    public BalanceModel() {
    }

    /**
     * Initialization constructor.
     * @param  accountId  String value for accountId.
     * @param  amount  Amount value for amount.
     * @param  creditDebitIndicator  CreditDebitIndicatorEnum value for creditDebitIndicator.
     * @param  type  BalanceModelTypeEnum value for type.
     * @param  dateTime  LocalDateTime value for dateTime.
     * @param  creditLine  List of CreditLine value for creditLine.
     */
    public BalanceModel(
            String accountId,
            Amount amount,
            CreditDebitIndicatorEnum creditDebitIndicator,
            BalanceModelTypeEnum type,
            LocalDateTime dateTime,
            List<CreditLine> creditLine) {
        this.accountId = accountId;
        this.amount = amount;
        this.creditDebitIndicator = creditDebitIndicator;
        this.type = type;
        this.dateTime = dateTime;
        this.creditLine = creditLine;
    }

    /**
     * Getter for AccountId.
     * A unique and immutable identifier used to identify the account resource. This identifier has
     * no meaning to the account owner.
     * @return Returns the String
     */
    @JsonGetter("AccountId")
    public String getAccountId() {
        return accountId;
    }

    /**
     * Setter for AccountId.
     * A unique and immutable identifier used to identify the account resource. This identifier has
     * no meaning to the account owner.
     * @param accountId Value for String
     */
    @JsonSetter("AccountId")
    public void setAccountId(String accountId) {
        this.accountId = accountId;
    }

    /**
     * Getter for Amount.
     * Amount of money of the cash balance.
     * @return Returns the Amount
     */
    @JsonGetter("Amount")
    public Amount getAmount() {
        return amount;
    }

    /**
     * Setter for Amount.
     * Amount of money of the cash balance.
     * @param amount Value for Amount
     */
    @JsonSetter("Amount")
    public void setAmount(Amount amount) {
        this.amount = amount;
    }

    /**
     * Getter for CreditDebitIndicator.
     * Indicates whether the balance is a credit or a debit balance. Usage: A zero balance is
     * considered to be a credit balance.
     * @return Returns the CreditDebitIndicatorEnum
     */
    @JsonGetter("CreditDebitIndicator")
    public CreditDebitIndicatorEnum getCreditDebitIndicator() {
        return creditDebitIndicator;
    }

    /**
     * Setter for CreditDebitIndicator.
     * Indicates whether the balance is a credit or a debit balance. Usage: A zero balance is
     * considered to be a credit balance.
     * @param creditDebitIndicator Value for CreditDebitIndicatorEnum
     */
    @JsonSetter("CreditDebitIndicator")
    public void setCreditDebitIndicator(CreditDebitIndicatorEnum creditDebitIndicator) {
        this.creditDebitIndicator = creditDebitIndicator;
    }

    /**
     * Getter for Type.
     * Balance type, in a coded form.
     * @return Returns the BalanceModelTypeEnum
     */
    @JsonGetter("Type")
    public BalanceModelTypeEnum getType() {
        return type;
    }

    /**
     * Setter for Type.
     * Balance type, in a coded form.
     * @param type Value for BalanceModelTypeEnum
     */
    @JsonSetter("Type")
    public void setType(BalanceModelTypeEnum type) {
        this.type = type;
    }

    /**
     * Getter for DateTime.
     * Indicates the date (and time) of the balance. All dates in the JSON payloads are represented
     * in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An
     * example is below: 2017-04-05T10:43:07+00:00
     * @return Returns the LocalDateTime
     */
    @JsonGetter("DateTime")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getDateTime() {
        return dateTime;
    }

    /**
     * Setter for DateTime.
     * Indicates the date (and time) of the balance. All dates in the JSON payloads are represented
     * in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An
     * example is below: 2017-04-05T10:43:07+00:00
     * @param dateTime Value for LocalDateTime
     */
    @JsonSetter("DateTime")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setDateTime(LocalDateTime dateTime) {
        this.dateTime = dateTime;
    }

    /**
     * Getter for CreditLine.
     * @return Returns the List of CreditLine
     */
    @JsonGetter("CreditLine")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<CreditLine> getCreditLine() {
        return creditLine;
    }

    /**
     * Setter for CreditLine.
     * @param creditLine Value for List of CreditLine
     */
    @JsonSetter("CreditLine")
    public void setCreditLine(List<CreditLine> creditLine) {
        this.creditLine = creditLine;
    }

    /**
     * Converts this BalanceModel into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "BalanceModel [" + "accountId=" + accountId + ", amount=" + amount
                + ", creditDebitIndicator=" + creditDebitIndicator + ", type=" + type
                + ", dateTime=" + dateTime + ", creditLine=" + creditLine + "]";
    }

    /**
     * Builds a new {@link BalanceModel.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link BalanceModel.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(accountId, amount, creditDebitIndicator, type, dateTime)
                .creditLine(getCreditLine());
        return builder;
    }

    /**
     * Class to build instances of {@link BalanceModel}.
     */
    public static class Builder {
        private String accountId;
        private Amount amount;
        private CreditDebitIndicatorEnum creditDebitIndicator;
        private BalanceModelTypeEnum type;
        private LocalDateTime dateTime;
        private List<CreditLine> creditLine;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  accountId  String value for accountId.
         * @param  amount  Amount value for amount.
         * @param  creditDebitIndicator  CreditDebitIndicatorEnum value for creditDebitIndicator.
         * @param  type  BalanceModelTypeEnum value for type.
         * @param  dateTime  LocalDateTime value for dateTime.
         */
        public Builder(String accountId, Amount amount,
                CreditDebitIndicatorEnum creditDebitIndicator, BalanceModelTypeEnum type,
                LocalDateTime dateTime) {
            this.accountId = accountId;
            this.amount = amount;
            this.creditDebitIndicator = creditDebitIndicator;
            this.type = type;
            this.dateTime = dateTime;
        }

        /**
         * Setter for accountId.
         * @param  accountId  String value for accountId.
         * @return Builder
         */
        public Builder accountId(String accountId) {
            this.accountId = accountId;
            return this;
        }

        /**
         * Setter for amount.
         * @param  amount  Amount value for amount.
         * @return Builder
         */
        public Builder amount(Amount amount) {
            this.amount = amount;
            return this;
        }

        /**
         * Setter for creditDebitIndicator.
         * @param  creditDebitIndicator  CreditDebitIndicatorEnum value for creditDebitIndicator.
         * @return Builder
         */
        public Builder creditDebitIndicator(CreditDebitIndicatorEnum creditDebitIndicator) {
            this.creditDebitIndicator = creditDebitIndicator;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  BalanceModelTypeEnum value for type.
         * @return Builder
         */
        public Builder type(BalanceModelTypeEnum type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for dateTime.
         * @param  dateTime  LocalDateTime value for dateTime.
         * @return Builder
         */
        public Builder dateTime(LocalDateTime dateTime) {
            this.dateTime = dateTime;
            return this;
        }

        /**
         * Setter for creditLine.
         * @param  creditLine  List of CreditLine value for creditLine.
         * @return Builder
         */
        public Builder creditLine(List<CreditLine> creditLine) {
            this.creditLine = creditLine;
            return this;
        }

        /**
         * Builds a new {@link BalanceModel} object using the set fields.
         * @return {@link BalanceModel}
         */
        public BalanceModel build() {
            return new BalanceModel(accountId, amount, creditDebitIndicator, type, dateTime,
                    creditLine);
        }
    }
}
