/*
 * AccountAndTransactionAPISpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package nz.co.middleware.apicentre.apinomatls.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for CreditLine type.
 */
public class CreditLine {
    private boolean included;
    private Amount amount;
    private CreditLineTypeEnum type;

    /**
     * Default constructor.
     */
    public CreditLine() {
    }

    /**
     * Initialization constructor.
     * @param  included  boolean value for included.
     * @param  amount  Amount value for amount.
     * @param  type  CreditLineTypeEnum value for type.
     */
    public CreditLine(
            boolean included,
            Amount amount,
            CreditLineTypeEnum type) {
        this.included = included;
        this.amount = amount;
        this.type = type;
    }

    /**
     * Getter for Included.
     * Indicates whether or not the credit line is included in the balance of the account. Usage: If
     * not present, credit line is not included in the balance amount of the account.
     * @return Returns the boolean
     */
    @JsonGetter("Included")
    public boolean getIncluded() {
        return included;
    }

    /**
     * Setter for Included.
     * Indicates whether or not the credit line is included in the balance of the account. Usage: If
     * not present, credit line is not included in the balance amount of the account.
     * @param included Value for boolean
     */
    @JsonSetter("Included")
    public void setIncluded(boolean included) {
        this.included = included;
    }

    /**
     * Getter for Amount.
     * Amount of money of the cash balance.
     * @return Returns the Amount
     */
    @JsonGetter("Amount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Amount getAmount() {
        return amount;
    }

    /**
     * Setter for Amount.
     * Amount of money of the cash balance.
     * @param amount Value for Amount
     */
    @JsonSetter("Amount")
    public void setAmount(Amount amount) {
        this.amount = amount;
    }

    /**
     * Getter for Type.
     * Limit type, in a coded form.
     * @return Returns the CreditLineTypeEnum
     */
    @JsonGetter("Type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CreditLineTypeEnum getType() {
        return type;
    }

    /**
     * Setter for Type.
     * Limit type, in a coded form.
     * @param type Value for CreditLineTypeEnum
     */
    @JsonSetter("Type")
    public void setType(CreditLineTypeEnum type) {
        this.type = type;
    }

    /**
     * Converts this CreditLine into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CreditLine [" + "included=" + included + ", amount=" + amount + ", type=" + type
                + "]";
    }

    /**
     * Builds a new {@link CreditLine.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CreditLine.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(included)
                .amount(getAmount())
                .type(getType());
        return builder;
    }

    /**
     * Class to build instances of {@link CreditLine}.
     */
    public static class Builder {
        private boolean included;
        private Amount amount;
        private CreditLineTypeEnum type;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  included  boolean value for included.
         */
        public Builder(boolean included) {
            this.included = included;
        }

        /**
         * Setter for included.
         * @param  included  boolean value for included.
         * @return Builder
         */
        public Builder included(boolean included) {
            this.included = included;
            return this;
        }

        /**
         * Setter for amount.
         * @param  amount  Amount value for amount.
         * @return Builder
         */
        public Builder amount(Amount amount) {
            this.amount = amount;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  CreditLineTypeEnum value for type.
         * @return Builder
         */
        public Builder type(CreditLineTypeEnum type) {
            this.type = type;
            return this;
        }

        /**
         * Builds a new {@link CreditLine} object using the set fields.
         * @return {@link CreditLine}
         */
        public CreditLine build() {
            return new CreditLine(included, amount, type);
        }
    }
}
