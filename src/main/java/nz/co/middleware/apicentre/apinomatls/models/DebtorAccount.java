/*
 * AccountAndTransactionAPISpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package nz.co.middleware.apicentre.apinomatls.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for DebtorAccount type.
 */
public class DebtorAccount {
    private AccountSchemeModelEnum schemeName;
    private String identification;
    private String name;
    private String secondaryIdentification;

    /**
     * Default constructor.
     */
    public DebtorAccount() {
    }

    /**
     * Initialization constructor.
     * @param  schemeName  AccountSchemeModelEnum value for schemeName.
     * @param  identification  String value for identification.
     * @param  name  String value for name.
     * @param  secondaryIdentification  String value for secondaryIdentification.
     */
    public DebtorAccount(
            AccountSchemeModelEnum schemeName,
            String identification,
            String name,
            String secondaryIdentification) {
        this.schemeName = schemeName;
        this.identification = identification;
        this.name = name;
        this.secondaryIdentification = secondaryIdentification;
    }

    /**
     * Getter for SchemeName.
     * @return Returns the AccountSchemeModelEnum
     */
    @JsonGetter("SchemeName")
    public AccountSchemeModelEnum getSchemeName() {
        return schemeName;
    }

    /**
     * Setter for SchemeName.
     * @param schemeName Value for AccountSchemeModelEnum
     */
    @JsonSetter("SchemeName")
    public void setSchemeName(AccountSchemeModelEnum schemeName) {
        this.schemeName = schemeName;
    }

    /**
     * Getter for Identification.
     * Identification assigned by an institution to identify an account. This identification is
     * known by the account owner.
     * @return Returns the String
     */
    @JsonGetter("Identification")
    public String getIdentification() {
        return identification;
    }

    /**
     * Setter for Identification.
     * Identification assigned by an institution to identify an account. This identification is
     * known by the account owner.
     * @param identification Value for String
     */
    @JsonSetter("Identification")
    public void setIdentification(String identification) {
        this.identification = identification;
    }

    /**
     * Getter for Name.
     * Name of the account, as assigned by the account servicing institution, in agreement with the
     * account owner in order to provide an additional means of identification of the account.
     * Usage: The account name is different from the account owner name. The account name is used in
     * certain user communities to provide a means of identifying the account, in addition to the
     * account owner's identity and the account number.
     * @return Returns the String
     */
    @JsonGetter("Name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Name of the account, as assigned by the account servicing institution, in agreement with the
     * account owner in order to provide an additional means of identification of the account.
     * Usage: The account name is different from the account owner name. The account name is used in
     * certain user communities to provide a means of identifying the account, in addition to the
     * account owner's identity and the account number.
     * @param name Value for String
     */
    @JsonSetter("Name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for SecondaryIdentification.
     * This is secondary identification of the account, as assigned by the account servicing
     * institution.
     * @return Returns the String
     */
    @JsonGetter("SecondaryIdentification")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSecondaryIdentification() {
        return secondaryIdentification;
    }

    /**
     * Setter for SecondaryIdentification.
     * This is secondary identification of the account, as assigned by the account servicing
     * institution.
     * @param secondaryIdentification Value for String
     */
    @JsonSetter("SecondaryIdentification")
    public void setSecondaryIdentification(String secondaryIdentification) {
        this.secondaryIdentification = secondaryIdentification;
    }

    /**
     * Converts this DebtorAccount into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DebtorAccount [" + "schemeName=" + schemeName + ", identification=" + identification
                + ", name=" + name + ", secondaryIdentification=" + secondaryIdentification + "]";
    }

    /**
     * Builds a new {@link DebtorAccount.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DebtorAccount.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(schemeName, identification)
                .name(getName())
                .secondaryIdentification(getSecondaryIdentification());
        return builder;
    }

    /**
     * Class to build instances of {@link DebtorAccount}.
     */
    public static class Builder {
        private AccountSchemeModelEnum schemeName;
        private String identification;
        private String name;
        private String secondaryIdentification;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  schemeName  AccountSchemeModelEnum value for schemeName.
         * @param  identification  String value for identification.
         */
        public Builder(AccountSchemeModelEnum schemeName, String identification) {
            this.schemeName = schemeName;
            this.identification = identification;
        }

        /**
         * Setter for schemeName.
         * @param  schemeName  AccountSchemeModelEnum value for schemeName.
         * @return Builder
         */
        public Builder schemeName(AccountSchemeModelEnum schemeName) {
            this.schemeName = schemeName;
            return this;
        }

        /**
         * Setter for identification.
         * @param  identification  String value for identification.
         * @return Builder
         */
        public Builder identification(String identification) {
            this.identification = identification;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for secondaryIdentification.
         * @param  secondaryIdentification  String value for secondaryIdentification.
         * @return Builder
         */
        public Builder secondaryIdentification(String secondaryIdentification) {
            this.secondaryIdentification = secondaryIdentification;
            return this;
        }

        /**
         * Builds a new {@link DebtorAccount} object using the set fields.
         * @return {@link DebtorAccount}
         */
        public DebtorAccount build() {
            return new DebtorAccount(schemeName, identification, name, secondaryIdentification);
        }
    }
}
