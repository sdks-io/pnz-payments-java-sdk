/*
 * AccountAndTransactionAPISpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package nz.co.middleware.apicentre.apinomatls.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Error type.
 */
public class Error {
    private ErrorCodeEnum errorCode;
    private String message;
    private String path;
    private String url;

    /**
     * Default constructor.
     */
    public Error() {
    }

    /**
     * Initialization constructor.
     * @param  errorCode  ErrorCodeEnum value for errorCode.
     * @param  message  String value for message.
     * @param  path  String value for path.
     * @param  url  String value for url.
     */
    public Error(
            ErrorCodeEnum errorCode,
            String message,
            String path,
            String url) {
        this.errorCode = errorCode;
        this.message = message;
        this.path = path;
        this.url = url;
    }

    /**
     * Getter for ErrorCode.
     * Low level textual error code.
     * @return Returns the ErrorCodeEnum
     */
    @JsonGetter("ErrorCode")
    public ErrorCodeEnum getErrorCode() {
        return errorCode;
    }

    /**
     * Setter for ErrorCode.
     * Low level textual error code.
     * @param errorCode Value for ErrorCodeEnum
     */
    @JsonSetter("ErrorCode")
    public void setErrorCode(ErrorCodeEnum errorCode) {
        this.errorCode = errorCode;
    }

    /**
     * Getter for Message.
     * A free text description of the error that occurred. E.g., 'A mandatory field isn't supplied'.
     * @return Returns the String
     */
    @JsonGetter("Message")
    public String getMessage() {
        return message;
    }

    /**
     * Setter for Message.
     * A free text description of the error that occurred. E.g., 'A mandatory field isn't supplied'.
     * @param message Value for String
     */
    @JsonSetter("Message")
    public void setMessage(String message) {
        this.message = message;
    }

    /**
     * Getter for Path.
     * A recommended but optional reference to the JSON Path of the field with error, e.g.,
     * Data.Consent.InstructedAmount.Currency
     * @return Returns the String
     */
    @JsonGetter("Path")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPath() {
        return path;
    }

    /**
     * Setter for Path.
     * A recommended but optional reference to the JSON Path of the field with error, e.g.,
     * Data.Consent.InstructedAmount.Currency
     * @param path Value for String
     */
    @JsonSetter("Path")
    public void setPath(String path) {
        this.path = path;
    }

    /**
     * Getter for Url.
     * URL to help remediate the problem, provide more information or to API Reference.
     * @return Returns the String
     */
    @JsonGetter("Url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * URL to help remediate the problem, provide more information or to API Reference.
     * @param url Value for String
     */
    @JsonSetter("Url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Converts this Error into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Error [" + "errorCode=" + errorCode + ", message=" + message + ", path=" + path
                + ", url=" + url + "]";
    }

    /**
     * Builds a new {@link Error.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Error.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(errorCode, message)
                .path(getPath())
                .url(getUrl());
        return builder;
    }

    /**
     * Class to build instances of {@link Error}.
     */
    public static class Builder {
        private ErrorCodeEnum errorCode;
        private String message;
        private String path;
        private String url;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  errorCode  ErrorCodeEnum value for errorCode.
         * @param  message  String value for message.
         */
        public Builder(ErrorCodeEnum errorCode, String message) {
            this.errorCode = errorCode;
            this.message = message;
        }

        /**
         * Setter for errorCode.
         * @param  errorCode  ErrorCodeEnum value for errorCode.
         * @return Builder
         */
        public Builder errorCode(ErrorCodeEnum errorCode) {
            this.errorCode = errorCode;
            return this;
        }

        /**
         * Setter for message.
         * @param  message  String value for message.
         * @return Builder
         */
        public Builder message(String message) {
            this.message = message;
            return this;
        }

        /**
         * Setter for path.
         * @param  path  String value for path.
         * @return Builder
         */
        public Builder path(String path) {
            this.path = path;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Builds a new {@link Error} object using the set fields.
         * @return {@link Error}
         */
        public Error build() {
            return new Error(errorCode, message, path, url);
        }
    }
}
