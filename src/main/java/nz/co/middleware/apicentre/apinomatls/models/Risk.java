/*
 * AccountAndTransactionAPISpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package nz.co.middleware.apicentre.apinomatls.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Risk type.
 */
public class Risk {
    private GeoLocation geoLocation;
    private PaymentContextCodeEnum paymentContextCode;
    private String merchantCategoryCode;
    private String merchantCustomerIdentification;
    private DeliveryAddress deliveryAddress;
    private String endUserAppName;
    private String endUserAppVersion;
    private String merchantName;
    private String merchantNZBN;

    /**
     * Default constructor.
     */
    public Risk() {
    }

    /**
     * Initialization constructor.
     * @param  geoLocation  GeoLocation value for geoLocation.
     * @param  paymentContextCode  PaymentContextCodeEnum value for paymentContextCode.
     * @param  merchantCategoryCode  String value for merchantCategoryCode.
     * @param  merchantCustomerIdentification  String value for merchantCustomerIdentification.
     * @param  deliveryAddress  DeliveryAddress value for deliveryAddress.
     * @param  endUserAppName  String value for endUserAppName.
     * @param  endUserAppVersion  String value for endUserAppVersion.
     * @param  merchantName  String value for merchantName.
     * @param  merchantNZBN  String value for merchantNZBN.
     */
    public Risk(
            GeoLocation geoLocation,
            PaymentContextCodeEnum paymentContextCode,
            String merchantCategoryCode,
            String merchantCustomerIdentification,
            DeliveryAddress deliveryAddress,
            String endUserAppName,
            String endUserAppVersion,
            String merchantName,
            String merchantNZBN) {
        this.geoLocation = geoLocation;
        this.paymentContextCode = paymentContextCode;
        this.merchantCategoryCode = merchantCategoryCode;
        this.merchantCustomerIdentification = merchantCustomerIdentification;
        this.deliveryAddress = deliveryAddress;
        this.endUserAppName = endUserAppName;
        this.endUserAppVersion = endUserAppVersion;
        this.merchantName = merchantName;
        this.merchantNZBN = merchantNZBN;
    }

    /**
     * Getter for GeoLocation.
     * Location of the end-user on the earth specified by two numbers representing vertical and
     * horizontal position
     * @return Returns the GeoLocation
     */
    @JsonGetter("GeoLocation")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public GeoLocation getGeoLocation() {
        return geoLocation;
    }

    /**
     * Setter for GeoLocation.
     * Location of the end-user on the earth specified by two numbers representing vertical and
     * horizontal position
     * @param geoLocation Value for GeoLocation
     */
    @JsonSetter("GeoLocation")
    public void setGeoLocation(GeoLocation geoLocation) {
        this.geoLocation = geoLocation;
    }

    /**
     * Getter for PaymentContextCode.
     * Specifies the payment context
     * @return Returns the PaymentContextCodeEnum
     */
    @JsonGetter("PaymentContextCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PaymentContextCodeEnum getPaymentContextCode() {
        return paymentContextCode;
    }

    /**
     * Setter for PaymentContextCode.
     * Specifies the payment context
     * @param paymentContextCode Value for PaymentContextCodeEnum
     */
    @JsonSetter("PaymentContextCode")
    public void setPaymentContextCode(PaymentContextCodeEnum paymentContextCode) {
        this.paymentContextCode = paymentContextCode;
    }

    /**
     * Getter for MerchantCategoryCode.
     * Category code conforms to ISO 18245, related to the type of services or goods the merchant
     * provides for the transaction
     * @return Returns the String
     */
    @JsonGetter("MerchantCategoryCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMerchantCategoryCode() {
        return merchantCategoryCode;
    }

    /**
     * Setter for MerchantCategoryCode.
     * Category code conforms to ISO 18245, related to the type of services or goods the merchant
     * provides for the transaction
     * @param merchantCategoryCode Value for String
     */
    @JsonSetter("MerchantCategoryCode")
    public void setMerchantCategoryCode(String merchantCategoryCode) {
        this.merchantCategoryCode = merchantCategoryCode;
    }

    /**
     * Getter for MerchantCustomerIdentification.
     * The unique customer identifier of the Customer with the merchant.
     * @return Returns the String
     */
    @JsonGetter("MerchantCustomerIdentification")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMerchantCustomerIdentification() {
        return merchantCustomerIdentification;
    }

    /**
     * Setter for MerchantCustomerIdentification.
     * The unique customer identifier of the Customer with the merchant.
     * @param merchantCustomerIdentification Value for String
     */
    @JsonSetter("MerchantCustomerIdentification")
    public void setMerchantCustomerIdentification(String merchantCustomerIdentification) {
        this.merchantCustomerIdentification = merchantCustomerIdentification;
    }

    /**
     * Getter for DeliveryAddress.
     * Information that locates and identifies a specific address, as defined by postal services or
     * in free format text.
     * @return Returns the DeliveryAddress
     */
    @JsonGetter("DeliveryAddress")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DeliveryAddress getDeliveryAddress() {
        return deliveryAddress;
    }

    /**
     * Setter for DeliveryAddress.
     * Information that locates and identifies a specific address, as defined by postal services or
     * in free format text.
     * @param deliveryAddress Value for DeliveryAddress
     */
    @JsonSetter("DeliveryAddress")
    public void setDeliveryAddress(DeliveryAddress deliveryAddress) {
        this.deliveryAddress = deliveryAddress;
    }

    /**
     * Getter for EndUserAppName.
     * Name of the end user facing application
     * @return Returns the String
     */
    @JsonGetter("EndUserAppName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEndUserAppName() {
        return endUserAppName;
    }

    /**
     * Setter for EndUserAppName.
     * Name of the end user facing application
     * @param endUserAppName Value for String
     */
    @JsonSetter("EndUserAppName")
    public void setEndUserAppName(String endUserAppName) {
        this.endUserAppName = endUserAppName;
    }

    /**
     * Getter for EndUserAppVersion.
     * Version of the end user facing application
     * @return Returns the String
     */
    @JsonGetter("EndUserAppVersion")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEndUserAppVersion() {
        return endUserAppVersion;
    }

    /**
     * Setter for EndUserAppVersion.
     * Version of the end user facing application
     * @param endUserAppVersion Value for String
     */
    @JsonSetter("EndUserAppVersion")
    public void setEndUserAppVersion(String endUserAppVersion) {
        this.endUserAppVersion = endUserAppVersion;
    }

    /**
     * Getter for MerchantName.
     * Name of the merchant
     * @return Returns the String
     */
    @JsonGetter("MerchantName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMerchantName() {
        return merchantName;
    }

    /**
     * Setter for MerchantName.
     * Name of the merchant
     * @param merchantName Value for String
     */
    @JsonSetter("MerchantName")
    public void setMerchantName(String merchantName) {
        this.merchantName = merchantName;
    }

    /**
     * Getter for MerchantNZBN.
     * NZ business number for the merchant
     * @return Returns the String
     */
    @JsonGetter("MerchantNZBN")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMerchantNZBN() {
        return merchantNZBN;
    }

    /**
     * Setter for MerchantNZBN.
     * NZ business number for the merchant
     * @param merchantNZBN Value for String
     */
    @JsonSetter("MerchantNZBN")
    public void setMerchantNZBN(String merchantNZBN) {
        this.merchantNZBN = merchantNZBN;
    }

    /**
     * Converts this Risk into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Risk [" + "geoLocation=" + geoLocation + ", paymentContextCode="
                + paymentContextCode + ", merchantCategoryCode=" + merchantCategoryCode
                + ", merchantCustomerIdentification=" + merchantCustomerIdentification
                + ", deliveryAddress=" + deliveryAddress + ", endUserAppName=" + endUserAppName
                + ", endUserAppVersion=" + endUserAppVersion + ", merchantName=" + merchantName
                + ", merchantNZBN=" + merchantNZBN + "]";
    }

    /**
     * Builds a new {@link Risk.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Risk.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .geoLocation(getGeoLocation())
                .paymentContextCode(getPaymentContextCode())
                .merchantCategoryCode(getMerchantCategoryCode())
                .merchantCustomerIdentification(getMerchantCustomerIdentification())
                .deliveryAddress(getDeliveryAddress())
                .endUserAppName(getEndUserAppName())
                .endUserAppVersion(getEndUserAppVersion())
                .merchantName(getMerchantName())
                .merchantNZBN(getMerchantNZBN());
        return builder;
    }

    /**
     * Class to build instances of {@link Risk}.
     */
    public static class Builder {
        private GeoLocation geoLocation;
        private PaymentContextCodeEnum paymentContextCode;
        private String merchantCategoryCode;
        private String merchantCustomerIdentification;
        private DeliveryAddress deliveryAddress;
        private String endUserAppName;
        private String endUserAppVersion;
        private String merchantName;
        private String merchantNZBN;



        /**
         * Setter for geoLocation.
         * @param  geoLocation  GeoLocation value for geoLocation.
         * @return Builder
         */
        public Builder geoLocation(GeoLocation geoLocation) {
            this.geoLocation = geoLocation;
            return this;
        }

        /**
         * Setter for paymentContextCode.
         * @param  paymentContextCode  PaymentContextCodeEnum value for paymentContextCode.
         * @return Builder
         */
        public Builder paymentContextCode(PaymentContextCodeEnum paymentContextCode) {
            this.paymentContextCode = paymentContextCode;
            return this;
        }

        /**
         * Setter for merchantCategoryCode.
         * @param  merchantCategoryCode  String value for merchantCategoryCode.
         * @return Builder
         */
        public Builder merchantCategoryCode(String merchantCategoryCode) {
            this.merchantCategoryCode = merchantCategoryCode;
            return this;
        }

        /**
         * Setter for merchantCustomerIdentification.
         * @param  merchantCustomerIdentification  String value for merchantCustomerIdentification.
         * @return Builder
         */
        public Builder merchantCustomerIdentification(String merchantCustomerIdentification) {
            this.merchantCustomerIdentification = merchantCustomerIdentification;
            return this;
        }

        /**
         * Setter for deliveryAddress.
         * @param  deliveryAddress  DeliveryAddress value for deliveryAddress.
         * @return Builder
         */
        public Builder deliveryAddress(DeliveryAddress deliveryAddress) {
            this.deliveryAddress = deliveryAddress;
            return this;
        }

        /**
         * Setter for endUserAppName.
         * @param  endUserAppName  String value for endUserAppName.
         * @return Builder
         */
        public Builder endUserAppName(String endUserAppName) {
            this.endUserAppName = endUserAppName;
            return this;
        }

        /**
         * Setter for endUserAppVersion.
         * @param  endUserAppVersion  String value for endUserAppVersion.
         * @return Builder
         */
        public Builder endUserAppVersion(String endUserAppVersion) {
            this.endUserAppVersion = endUserAppVersion;
            return this;
        }

        /**
         * Setter for merchantName.
         * @param  merchantName  String value for merchantName.
         * @return Builder
         */
        public Builder merchantName(String merchantName) {
            this.merchantName = merchantName;
            return this;
        }

        /**
         * Setter for merchantNZBN.
         * @param  merchantNZBN  String value for merchantNZBN.
         * @return Builder
         */
        public Builder merchantNZBN(String merchantNZBN) {
            this.merchantNZBN = merchantNZBN;
            return this;
        }

        /**
         * Builds a new {@link Risk} object using the set fields.
         * @return {@link Risk}
         */
        public Risk build() {
            return new Risk(geoLocation, paymentContextCode, merchantCategoryCode,
                    merchantCustomerIdentification, deliveryAddress, endUserAppName,
                    endUserAppVersion, merchantName, merchantNZBN);
        }
    }
}
