/*
 * AccountAndTransactionAPISpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package nz.co.middleware.apicentre.apinomatls.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for DeliveryAddress type.
 */
public class DeliveryAddress {
    private AddressTypeEnum addressType;
    private List<String> addressLine;
    private String streetName;
    private String buildingNumber;
    private String postCode;
    private String townName;
    private String countrySubDivision;
    private String country;

    /**
     * Default constructor.
     */
    public DeliveryAddress() {
    }

    /**
     * Initialization constructor.
     * @param  country  String value for country.
     * @param  addressType  AddressTypeEnum value for addressType.
     * @param  addressLine  List of String value for addressLine.
     * @param  streetName  String value for streetName.
     * @param  buildingNumber  String value for buildingNumber.
     * @param  postCode  String value for postCode.
     * @param  townName  String value for townName.
     * @param  countrySubDivision  String value for countrySubDivision.
     */
    public DeliveryAddress(
            String country,
            AddressTypeEnum addressType,
            List<String> addressLine,
            String streetName,
            String buildingNumber,
            String postCode,
            String townName,
            String countrySubDivision) {
        this.addressType = addressType;
        this.addressLine = addressLine;
        this.streetName = streetName;
        this.buildingNumber = buildingNumber;
        this.postCode = postCode;
        this.townName = townName;
        this.countrySubDivision = countrySubDivision;
        this.country = country;
    }

    /**
     * Getter for AddressType.
     * Identifies the nature of the postal address.
     * @return Returns the AddressTypeEnum
     */
    @JsonGetter("AddressType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AddressTypeEnum getAddressType() {
        return addressType;
    }

    /**
     * Setter for AddressType.
     * Identifies the nature of the postal address.
     * @param addressType Value for AddressTypeEnum
     */
    @JsonSetter("AddressType")
    public void setAddressType(AddressTypeEnum addressType) {
        this.addressType = addressType;
    }

    /**
     * Getter for AddressLine.
     * Information that locates and identifies a specific address, as defined by postal services,
     * that is presented in free format text.
     * @return Returns the List of String
     */
    @JsonGetter("AddressLine")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getAddressLine() {
        return addressLine;
    }

    /**
     * Setter for AddressLine.
     * Information that locates and identifies a specific address, as defined by postal services,
     * that is presented in free format text.
     * @param addressLine Value for List of String
     */
    @JsonSetter("AddressLine")
    public void setAddressLine(List<String> addressLine) {
        this.addressLine = addressLine;
    }

    /**
     * Getter for StreetName.
     * Name of a street or thoroughfare.
     * @return Returns the String
     */
    @JsonGetter("StreetName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getStreetName() {
        return streetName;
    }

    /**
     * Setter for StreetName.
     * Name of a street or thoroughfare.
     * @param streetName Value for String
     */
    @JsonSetter("StreetName")
    public void setStreetName(String streetName) {
        this.streetName = streetName;
    }

    /**
     * Getter for BuildingNumber.
     * Number that identifies the position of a building on a street.
     * @return Returns the String
     */
    @JsonGetter("BuildingNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBuildingNumber() {
        return buildingNumber;
    }

    /**
     * Setter for BuildingNumber.
     * Number that identifies the position of a building on a street.
     * @param buildingNumber Value for String
     */
    @JsonSetter("BuildingNumber")
    public void setBuildingNumber(String buildingNumber) {
        this.buildingNumber = buildingNumber;
    }

    /**
     * Getter for PostCode.
     * Identifier consisting of a group of letters and/or numbers that is added to a postal address
     * to assist the sorting of mail
     * @return Returns the String
     */
    @JsonGetter("PostCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPostCode() {
        return postCode;
    }

    /**
     * Setter for PostCode.
     * Identifier consisting of a group of letters and/or numbers that is added to a postal address
     * to assist the sorting of mail
     * @param postCode Value for String
     */
    @JsonSetter("PostCode")
    public void setPostCode(String postCode) {
        this.postCode = postCode;
    }

    /**
     * Getter for TownName.
     * Name of a built-up area, with defined boundaries, and a local government.
     * @return Returns the String
     */
    @JsonGetter("TownName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTownName() {
        return townName;
    }

    /**
     * Setter for TownName.
     * Name of a built-up area, with defined boundaries, and a local government.
     * @param townName Value for String
     */
    @JsonSetter("TownName")
    public void setTownName(String townName) {
        this.townName = townName;
    }

    /**
     * Getter for CountrySubDivision.
     * Identifies a subdivision of a country, for instance state, region, county.
     * @return Returns the String
     */
    @JsonGetter("CountrySubDivision")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCountrySubDivision() {
        return countrySubDivision;
    }

    /**
     * Setter for CountrySubDivision.
     * Identifies a subdivision of a country, for instance state, region, county.
     * @param countrySubDivision Value for String
     */
    @JsonSetter("CountrySubDivision")
    public void setCountrySubDivision(String countrySubDivision) {
        this.countrySubDivision = countrySubDivision;
    }

    /**
     * Getter for Country.
     * Nation with its own government, occupying a particular territory.
     * @return Returns the String
     */
    @JsonGetter("Country")
    public String getCountry() {
        return country;
    }

    /**
     * Setter for Country.
     * Nation with its own government, occupying a particular territory.
     * @param country Value for String
     */
    @JsonSetter("Country")
    public void setCountry(String country) {
        this.country = country;
    }

    /**
     * Converts this DeliveryAddress into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DeliveryAddress [" + "country=" + country + ", addressType=" + addressType
                + ", addressLine=" + addressLine + ", streetName=" + streetName
                + ", buildingNumber=" + buildingNumber + ", postCode=" + postCode + ", townName="
                + townName + ", countrySubDivision=" + countrySubDivision + "]";
    }

    /**
     * Builds a new {@link DeliveryAddress.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DeliveryAddress.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(country)
                .addressType(getAddressType())
                .addressLine(getAddressLine())
                .streetName(getStreetName())
                .buildingNumber(getBuildingNumber())
                .postCode(getPostCode())
                .townName(getTownName())
                .countrySubDivision(getCountrySubDivision());
        return builder;
    }

    /**
     * Class to build instances of {@link DeliveryAddress}.
     */
    public static class Builder {
        private String country;
        private AddressTypeEnum addressType;
        private List<String> addressLine;
        private String streetName;
        private String buildingNumber;
        private String postCode;
        private String townName;
        private String countrySubDivision;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  country  String value for country.
         */
        public Builder(String country) {
            this.country = country;
        }

        /**
         * Setter for country.
         * @param  country  String value for country.
         * @return Builder
         */
        public Builder country(String country) {
            this.country = country;
            return this;
        }

        /**
         * Setter for addressType.
         * @param  addressType  AddressTypeEnum value for addressType.
         * @return Builder
         */
        public Builder addressType(AddressTypeEnum addressType) {
            this.addressType = addressType;
            return this;
        }

        /**
         * Setter for addressLine.
         * @param  addressLine  List of String value for addressLine.
         * @return Builder
         */
        public Builder addressLine(List<String> addressLine) {
            this.addressLine = addressLine;
            return this;
        }

        /**
         * Setter for streetName.
         * @param  streetName  String value for streetName.
         * @return Builder
         */
        public Builder streetName(String streetName) {
            this.streetName = streetName;
            return this;
        }

        /**
         * Setter for buildingNumber.
         * @param  buildingNumber  String value for buildingNumber.
         * @return Builder
         */
        public Builder buildingNumber(String buildingNumber) {
            this.buildingNumber = buildingNumber;
            return this;
        }

        /**
         * Setter for postCode.
         * @param  postCode  String value for postCode.
         * @return Builder
         */
        public Builder postCode(String postCode) {
            this.postCode = postCode;
            return this;
        }

        /**
         * Setter for townName.
         * @param  townName  String value for townName.
         * @return Builder
         */
        public Builder townName(String townName) {
            this.townName = townName;
            return this;
        }

        /**
         * Setter for countrySubDivision.
         * @param  countrySubDivision  String value for countrySubDivision.
         * @return Builder
         */
        public Builder countrySubDivision(String countrySubDivision) {
            this.countrySubDivision = countrySubDivision;
            return this;
        }

        /**
         * Builds a new {@link DeliveryAddress} object using the set fields.
         * @return {@link DeliveryAddress}
         */
        public DeliveryAddress build() {
            return new DeliveryAddress(country, addressType, addressLine, streetName,
                    buildingNumber, postCode, townName, countrySubDivision);
        }
    }
}
