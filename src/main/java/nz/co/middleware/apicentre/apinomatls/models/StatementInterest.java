/*
 * AccountAndTransactionAPISpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package nz.co.middleware.apicentre.apinomatls.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for StatementInterest type.
 */
public class StatementInterest {
    private Amount amount;
    private CreditDebitIndicatorEnum creditDebitIndicator;
    private StatementInterestTypeEnum type;

    /**
     * Default constructor.
     */
    public StatementInterest() {
    }

    /**
     * Initialization constructor.
     * @param  amount  Amount value for amount.
     * @param  creditDebitIndicator  CreditDebitIndicatorEnum value for creditDebitIndicator.
     * @param  type  StatementInterestTypeEnum value for type.
     */
    public StatementInterest(
            Amount amount,
            CreditDebitIndicatorEnum creditDebitIndicator,
            StatementInterestTypeEnum type) {
        this.amount = amount;
        this.creditDebitIndicator = creditDebitIndicator;
        this.type = type;
    }

    /**
     * Getter for Amount.
     * Amount of money of the cash balance.
     * @return Returns the Amount
     */
    @JsonGetter("Amount")
    public Amount getAmount() {
        return amount;
    }

    /**
     * Setter for Amount.
     * Amount of money of the cash balance.
     * @param amount Value for Amount
     */
    @JsonSetter("Amount")
    public void setAmount(Amount amount) {
        this.amount = amount;
    }

    /**
     * Getter for CreditDebitIndicator.
     * Indicates whether the balance is a credit or a debit balance. Usage: A zero balance is
     * considered to be a credit balance.
     * @return Returns the CreditDebitIndicatorEnum
     */
    @JsonGetter("CreditDebitIndicator")
    public CreditDebitIndicatorEnum getCreditDebitIndicator() {
        return creditDebitIndicator;
    }

    /**
     * Setter for CreditDebitIndicator.
     * Indicates whether the balance is a credit or a debit balance. Usage: A zero balance is
     * considered to be a credit balance.
     * @param creditDebitIndicator Value for CreditDebitIndicatorEnum
     */
    @JsonSetter("CreditDebitIndicator")
    public void setCreditDebitIndicator(CreditDebitIndicatorEnum creditDebitIndicator) {
        this.creditDebitIndicator = creditDebitIndicator;
    }

    /**
     * Getter for Type.
     * Interest amount type, in a coded form.
     * @return Returns the StatementInterestTypeEnum
     */
    @JsonGetter("Type")
    public StatementInterestTypeEnum getType() {
        return type;
    }

    /**
     * Setter for Type.
     * Interest amount type, in a coded form.
     * @param type Value for StatementInterestTypeEnum
     */
    @JsonSetter("Type")
    public void setType(StatementInterestTypeEnum type) {
        this.type = type;
    }

    /**
     * Converts this StatementInterest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "StatementInterest [" + "amount=" + amount + ", creditDebitIndicator="
                + creditDebitIndicator + ", type=" + type + "]";
    }

    /**
     * Builds a new {@link StatementInterest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link StatementInterest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(amount, creditDebitIndicator, type);
        return builder;
    }

    /**
     * Class to build instances of {@link StatementInterest}.
     */
    public static class Builder {
        private Amount amount;
        private CreditDebitIndicatorEnum creditDebitIndicator;
        private StatementInterestTypeEnum type;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  amount  Amount value for amount.
         * @param  creditDebitIndicator  CreditDebitIndicatorEnum value for creditDebitIndicator.
         * @param  type  StatementInterestTypeEnum value for type.
         */
        public Builder(Amount amount, CreditDebitIndicatorEnum creditDebitIndicator,
                StatementInterestTypeEnum type) {
            this.amount = amount;
            this.creditDebitIndicator = creditDebitIndicator;
            this.type = type;
        }

        /**
         * Setter for amount.
         * @param  amount  Amount value for amount.
         * @return Builder
         */
        public Builder amount(Amount amount) {
            this.amount = amount;
            return this;
        }

        /**
         * Setter for creditDebitIndicator.
         * @param  creditDebitIndicator  CreditDebitIndicatorEnum value for creditDebitIndicator.
         * @return Builder
         */
        public Builder creditDebitIndicator(CreditDebitIndicatorEnum creditDebitIndicator) {
            this.creditDebitIndicator = creditDebitIndicator;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  StatementInterestTypeEnum value for type.
         * @return Builder
         */
        public Builder type(StatementInterestTypeEnum type) {
            this.type = type;
            return this;
        }

        /**
         * Builds a new {@link StatementInterest} object using the set fields.
         * @return {@link StatementInterest}
         */
        public StatementInterest build() {
            return new StatementInterest(amount, creditDebitIndicator, type);
        }
    }
}
