/*
 * AccountAndTransactionAPISpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package nz.co.middleware.apicentre.apinomatls.models;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;


/**
 * PermissionEnum to be used.
 */
public enum PermissionEnum {
    READACCOUNTSBASIC,

    READACCOUNTSDETAIL,

    READBALANCES,

    READBENEFICIARIESBASIC,

    READBENEFICIARIESDETAIL,

    READDIRECTDEBITS,

    READOFFERS,

    READPARTY,

    READPARTYAUTHUSER,

    READSCHEDULEDPAYMENTSBASIC,

    READSCHEDULEDPAYMENTSDETAIL,

    READSTANDINGORDERSBASIC,

    READSTANDINGORDERSDETAIL,

    READSTATEMENTSBASIC,

    READSTATEMENTSDETAIL,

    READTRANSACTIONSBASIC,

    READTRANSACTIONSCREDITS,

    READTRANSACTIONSDEBITS,

    READTRANSACTIONSDETAIL;


    private static TreeMap<String, PermissionEnum> valueMap = new TreeMap<>();
    private String value;

    static {
        READACCOUNTSBASIC.value = "ReadAccountsBasic";
        READACCOUNTSDETAIL.value = "ReadAccountsDetail";
        READBALANCES.value = "ReadBalances";
        READBENEFICIARIESBASIC.value = "ReadBeneficiariesBasic";
        READBENEFICIARIESDETAIL.value = "ReadBeneficiariesDetail";
        READDIRECTDEBITS.value = "ReadDirectDebits";
        READOFFERS.value = "ReadOffers";
        READPARTY.value = "ReadParty";
        READPARTYAUTHUSER.value = "ReadPartyAuthUser";
        READSCHEDULEDPAYMENTSBASIC.value = "ReadScheduledPaymentsBasic";
        READSCHEDULEDPAYMENTSDETAIL.value = "ReadScheduledPaymentsDetail";
        READSTANDINGORDERSBASIC.value = "ReadStandingOrdersBasic";
        READSTANDINGORDERSDETAIL.value = "ReadStandingOrdersDetail";
        READSTATEMENTSBASIC.value = "ReadStatementsBasic";
        READSTATEMENTSDETAIL.value = "ReadStatementsDetail";
        READTRANSACTIONSBASIC.value = "ReadTransactionsBasic";
        READTRANSACTIONSCREDITS.value = "ReadTransactionsCredits";
        READTRANSACTIONSDEBITS.value = "ReadTransactionsDebits";
        READTRANSACTIONSDETAIL.value = "ReadTransactionsDetail";

        valueMap.put("ReadAccountsBasic", READACCOUNTSBASIC);
        valueMap.put("ReadAccountsDetail", READACCOUNTSDETAIL);
        valueMap.put("ReadBalances", READBALANCES);
        valueMap.put("ReadBeneficiariesBasic", READBENEFICIARIESBASIC);
        valueMap.put("ReadBeneficiariesDetail", READBENEFICIARIESDETAIL);
        valueMap.put("ReadDirectDebits", READDIRECTDEBITS);
        valueMap.put("ReadOffers", READOFFERS);
        valueMap.put("ReadParty", READPARTY);
        valueMap.put("ReadPartyAuthUser", READPARTYAUTHUSER);
        valueMap.put("ReadScheduledPaymentsBasic", READSCHEDULEDPAYMENTSBASIC);
        valueMap.put("ReadScheduledPaymentsDetail", READSCHEDULEDPAYMENTSDETAIL);
        valueMap.put("ReadStandingOrdersBasic", READSTANDINGORDERSBASIC);
        valueMap.put("ReadStandingOrdersDetail", READSTANDINGORDERSDETAIL);
        valueMap.put("ReadStatementsBasic", READSTATEMENTSBASIC);
        valueMap.put("ReadStatementsDetail", READSTATEMENTSDETAIL);
        valueMap.put("ReadTransactionsBasic", READTRANSACTIONSBASIC);
        valueMap.put("ReadTransactionsCredits", READTRANSACTIONSCREDITS);
        valueMap.put("ReadTransactionsDebits", READTRANSACTIONSDEBITS);
        valueMap.put("ReadTransactionsDetail", READTRANSACTIONSDETAIL);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     * @throws IOException when provided value is not mapped to any enum member.
     */
    @JsonCreator
    public static PermissionEnum constructFromString(String toConvert) throws IOException {
        PermissionEnum enumValue = fromString(toConvert);
        if (enumValue == null) {
            throw new IOException("Unable to create enum instance with value: " + toConvert);
        }
        return enumValue;
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    public static PermissionEnum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of PermissionEnum values to list of string values.
     * @param toConvert The list of PermissionEnum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<PermissionEnum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (PermissionEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 