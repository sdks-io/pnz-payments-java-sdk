/*
 * AccountAndTransactionAPISpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package nz.co.middleware.apicentre.apinomatls.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for CardInstrument type.
 */
public class CardInstrument {
    private CardSchemeNameEnum cardSchemeName;
    private AuthorisationTypeEnum authorisationType;
    private String name;
    private String identification;

    /**
     * Default constructor.
     */
    public CardInstrument() {
    }

    /**
     * Initialization constructor.
     * @param  cardSchemeName  CardSchemeNameEnum value for cardSchemeName.
     * @param  authorisationType  AuthorisationTypeEnum value for authorisationType.
     * @param  name  String value for name.
     * @param  identification  String value for identification.
     */
    public CardInstrument(
            CardSchemeNameEnum cardSchemeName,
            AuthorisationTypeEnum authorisationType,
            String name,
            String identification) {
        this.cardSchemeName = cardSchemeName;
        this.authorisationType = authorisationType;
        this.name = name;
        this.identification = identification;
    }

    /**
     * Getter for CardSchemeName.
     * Name of the card scheme.
     * @return Returns the CardSchemeNameEnum
     */
    @JsonGetter("CardSchemeName")
    public CardSchemeNameEnum getCardSchemeName() {
        return cardSchemeName;
    }

    /**
     * Setter for CardSchemeName.
     * Name of the card scheme.
     * @param cardSchemeName Value for CardSchemeNameEnum
     */
    @JsonSetter("CardSchemeName")
    public void setCardSchemeName(CardSchemeNameEnum cardSchemeName) {
        this.cardSchemeName = cardSchemeName;
    }

    /**
     * Getter for AuthorisationType.
     * The card authorisation type.
     * @return Returns the AuthorisationTypeEnum
     */
    @JsonGetter("AuthorisationType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AuthorisationTypeEnum getAuthorisationType() {
        return authorisationType;
    }

    /**
     * Setter for AuthorisationType.
     * The card authorisation type.
     * @param authorisationType Value for AuthorisationTypeEnum
     */
    @JsonSetter("AuthorisationType")
    public void setAuthorisationType(AuthorisationTypeEnum authorisationType) {
        this.authorisationType = authorisationType;
    }

    /**
     * Getter for Name.
     * Name of the cardholder using the card instrument.
     * @return Returns the String
     */
    @JsonGetter("Name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Name of the cardholder using the card instrument.
     * @param name Value for String
     */
    @JsonSetter("Name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Identification.
     * Identification assigned by an institution to identify the card instrument used in the
     * transaction. This identification is known by the account owner, and may be masked.
     * @return Returns the String
     */
    @JsonGetter("Identification")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getIdentification() {
        return identification;
    }

    /**
     * Setter for Identification.
     * Identification assigned by an institution to identify the card instrument used in the
     * transaction. This identification is known by the account owner, and may be masked.
     * @param identification Value for String
     */
    @JsonSetter("Identification")
    public void setIdentification(String identification) {
        this.identification = identification;
    }

    /**
     * Converts this CardInstrument into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CardInstrument [" + "cardSchemeName=" + cardSchemeName + ", authorisationType="
                + authorisationType + ", name=" + name + ", identification=" + identification + "]";
    }

    /**
     * Builds a new {@link CardInstrument.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CardInstrument.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(cardSchemeName)
                .authorisationType(getAuthorisationType())
                .name(getName())
                .identification(getIdentification());
        return builder;
    }

    /**
     * Class to build instances of {@link CardInstrument}.
     */
    public static class Builder {
        private CardSchemeNameEnum cardSchemeName;
        private AuthorisationTypeEnum authorisationType;
        private String name;
        private String identification;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  cardSchemeName  CardSchemeNameEnum value for cardSchemeName.
         */
        public Builder(CardSchemeNameEnum cardSchemeName) {
            this.cardSchemeName = cardSchemeName;
        }

        /**
         * Setter for cardSchemeName.
         * @param  cardSchemeName  CardSchemeNameEnum value for cardSchemeName.
         * @return Builder
         */
        public Builder cardSchemeName(CardSchemeNameEnum cardSchemeName) {
            this.cardSchemeName = cardSchemeName;
            return this;
        }

        /**
         * Setter for authorisationType.
         * @param  authorisationType  AuthorisationTypeEnum value for authorisationType.
         * @return Builder
         */
        public Builder authorisationType(AuthorisationTypeEnum authorisationType) {
            this.authorisationType = authorisationType;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for identification.
         * @param  identification  String value for identification.
         * @return Builder
         */
        public Builder identification(String identification) {
            this.identification = identification;
            return this;
        }

        /**
         * Builds a new {@link CardInstrument} object using the set fields.
         * @return {@link CardInstrument}
         */
        public CardInstrument build() {
            return new CardInstrument(cardSchemeName, authorisationType, name, identification);
        }
    }
}
