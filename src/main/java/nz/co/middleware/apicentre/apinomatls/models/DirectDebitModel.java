/*
 * AccountAndTransactionAPISpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package nz.co.middleware.apicentre.apinomatls.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDateTime;
import nz.co.middleware.apicentre.apinomatls.DateTimeHelper;

/**
 * This is a model class for DirectDebitModel type.
 */
public class DirectDebitModel {
    private String accountId;
    private String directDebitId;
    private String mandateIdentification;
    private DirectDebitStatusCodeEnum directDebitStatusCode;
    private String name;
    private LocalDateTime previousPaymentDateTime;
    private PreviousPaymentAmount previousPaymentAmount;

    /**
     * Default constructor.
     */
    public DirectDebitModel() {
    }

    /**
     * Initialization constructor.
     * @param  accountId  String value for accountId.
     * @param  mandateIdentification  String value for mandateIdentification.
     * @param  name  String value for name.
     * @param  directDebitId  String value for directDebitId.
     * @param  directDebitStatusCode  DirectDebitStatusCodeEnum value for directDebitStatusCode.
     * @param  previousPaymentDateTime  LocalDateTime value for previousPaymentDateTime.
     * @param  previousPaymentAmount  PreviousPaymentAmount value for previousPaymentAmount.
     */
    public DirectDebitModel(
            String accountId,
            String mandateIdentification,
            String name,
            String directDebitId,
            DirectDebitStatusCodeEnum directDebitStatusCode,
            LocalDateTime previousPaymentDateTime,
            PreviousPaymentAmount previousPaymentAmount) {
        this.accountId = accountId;
        this.directDebitId = directDebitId;
        this.mandateIdentification = mandateIdentification;
        this.directDebitStatusCode = directDebitStatusCode;
        this.name = name;
        this.previousPaymentDateTime = previousPaymentDateTime;
        this.previousPaymentAmount = previousPaymentAmount;
    }

    /**
     * Getter for AccountId.
     * A unique and immutable identifier used to identify the account resource. This identifier has
     * no meaning to the account owner.
     * @return Returns the String
     */
    @JsonGetter("AccountId")
    public String getAccountId() {
        return accountId;
    }

    /**
     * Setter for AccountId.
     * A unique and immutable identifier used to identify the account resource. This identifier has
     * no meaning to the account owner.
     * @param accountId Value for String
     */
    @JsonSetter("AccountId")
    public void setAccountId(String accountId) {
        this.accountId = accountId;
    }

    /**
     * Getter for DirectDebitId.
     * A unique and immutable identifier used to identify the direct debit resource. This identifier
     * has no meaning to the account owner.
     * @return Returns the String
     */
    @JsonGetter("DirectDebitId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDirectDebitId() {
        return directDebitId;
    }

    /**
     * Setter for DirectDebitId.
     * A unique and immutable identifier used to identify the direct debit resource. This identifier
     * has no meaning to the account owner.
     * @param directDebitId Value for String
     */
    @JsonSetter("DirectDebitId")
    public void setDirectDebitId(String directDebitId) {
        this.directDebitId = directDebitId;
    }

    /**
     * Getter for MandateIdentification.
     * Direct Debit reference.
     * @return Returns the String
     */
    @JsonGetter("MandateIdentification")
    public String getMandateIdentification() {
        return mandateIdentification;
    }

    /**
     * Setter for MandateIdentification.
     * Direct Debit reference.
     * @param mandateIdentification Value for String
     */
    @JsonSetter("MandateIdentification")
    public void setMandateIdentification(String mandateIdentification) {
        this.mandateIdentification = mandateIdentification;
    }

    /**
     * Getter for DirectDebitStatusCode.
     * Specifies the status of the direct debit in code form.
     * @return Returns the DirectDebitStatusCodeEnum
     */
    @JsonGetter("DirectDebitStatusCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DirectDebitStatusCodeEnum getDirectDebitStatusCode() {
        return directDebitStatusCode;
    }

    /**
     * Setter for DirectDebitStatusCode.
     * Specifies the status of the direct debit in code form.
     * @param directDebitStatusCode Value for DirectDebitStatusCodeEnum
     */
    @JsonSetter("DirectDebitStatusCode")
    public void setDirectDebitStatusCode(DirectDebitStatusCodeEnum directDebitStatusCode) {
        this.directDebitStatusCode = directDebitStatusCode;
    }

    /**
     * Getter for Name.
     * Name of Service User
     * @return Returns the String
     */
    @JsonGetter("Name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Name of Service User
     * @param name Value for String
     */
    @JsonSetter("Name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for PreviousPaymentDateTime.
     * Date of most recent direct debit collection. All dates in the JSON payloads are represented
     * in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An
     * example is below: 2017-04-05T10:43:07+00:00
     * @return Returns the LocalDateTime
     */
    @JsonGetter("PreviousPaymentDateTime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getPreviousPaymentDateTime() {
        return previousPaymentDateTime;
    }

    /**
     * Setter for PreviousPaymentDateTime.
     * Date of most recent direct debit collection. All dates in the JSON payloads are represented
     * in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An
     * example is below: 2017-04-05T10:43:07+00:00
     * @param previousPaymentDateTime Value for LocalDateTime
     */
    @JsonSetter("PreviousPaymentDateTime")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setPreviousPaymentDateTime(LocalDateTime previousPaymentDateTime) {
        this.previousPaymentDateTime = previousPaymentDateTime;
    }

    /**
     * Getter for PreviousPaymentAmount.
     * The amount of the most recent direct debit collection.
     * @return Returns the PreviousPaymentAmount
     */
    @JsonGetter("PreviousPaymentAmount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PreviousPaymentAmount getPreviousPaymentAmount() {
        return previousPaymentAmount;
    }

    /**
     * Setter for PreviousPaymentAmount.
     * The amount of the most recent direct debit collection.
     * @param previousPaymentAmount Value for PreviousPaymentAmount
     */
    @JsonSetter("PreviousPaymentAmount")
    public void setPreviousPaymentAmount(PreviousPaymentAmount previousPaymentAmount) {
        this.previousPaymentAmount = previousPaymentAmount;
    }

    /**
     * Converts this DirectDebitModel into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DirectDebitModel [" + "accountId=" + accountId + ", mandateIdentification="
                + mandateIdentification + ", name=" + name + ", directDebitId=" + directDebitId
                + ", directDebitStatusCode=" + directDebitStatusCode + ", previousPaymentDateTime="
                + previousPaymentDateTime + ", previousPaymentAmount=" + previousPaymentAmount
                + "]";
    }

    /**
     * Builds a new {@link DirectDebitModel.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DirectDebitModel.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(accountId, mandateIdentification, name)
                .directDebitId(getDirectDebitId())
                .directDebitStatusCode(getDirectDebitStatusCode())
                .previousPaymentDateTime(getPreviousPaymentDateTime())
                .previousPaymentAmount(getPreviousPaymentAmount());
        return builder;
    }

    /**
     * Class to build instances of {@link DirectDebitModel}.
     */
    public static class Builder {
        private String accountId;
        private String mandateIdentification;
        private String name;
        private String directDebitId;
        private DirectDebitStatusCodeEnum directDebitStatusCode;
        private LocalDateTime previousPaymentDateTime;
        private PreviousPaymentAmount previousPaymentAmount;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  accountId  String value for accountId.
         * @param  mandateIdentification  String value for mandateIdentification.
         * @param  name  String value for name.
         */
        public Builder(String accountId, String mandateIdentification, String name) {
            this.accountId = accountId;
            this.mandateIdentification = mandateIdentification;
            this.name = name;
        }

        /**
         * Setter for accountId.
         * @param  accountId  String value for accountId.
         * @return Builder
         */
        public Builder accountId(String accountId) {
            this.accountId = accountId;
            return this;
        }

        /**
         * Setter for mandateIdentification.
         * @param  mandateIdentification  String value for mandateIdentification.
         * @return Builder
         */
        public Builder mandateIdentification(String mandateIdentification) {
            this.mandateIdentification = mandateIdentification;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for directDebitId.
         * @param  directDebitId  String value for directDebitId.
         * @return Builder
         */
        public Builder directDebitId(String directDebitId) {
            this.directDebitId = directDebitId;
            return this;
        }

        /**
         * Setter for directDebitStatusCode.
         * @param  directDebitStatusCode  DirectDebitStatusCodeEnum value for directDebitStatusCode.
         * @return Builder
         */
        public Builder directDebitStatusCode(DirectDebitStatusCodeEnum directDebitStatusCode) {
            this.directDebitStatusCode = directDebitStatusCode;
            return this;
        }

        /**
         * Setter for previousPaymentDateTime.
         * @param  previousPaymentDateTime  LocalDateTime value for previousPaymentDateTime.
         * @return Builder
         */
        public Builder previousPaymentDateTime(LocalDateTime previousPaymentDateTime) {
            this.previousPaymentDateTime = previousPaymentDateTime;
            return this;
        }

        /**
         * Setter for previousPaymentAmount.
         * @param  previousPaymentAmount  PreviousPaymentAmount value for previousPaymentAmount.
         * @return Builder
         */
        public Builder previousPaymentAmount(PreviousPaymentAmount previousPaymentAmount) {
            this.previousPaymentAmount = previousPaymentAmount;
            return this;
        }

        /**
         * Builds a new {@link DirectDebitModel} object using the set fields.
         * @return {@link DirectDebitModel}
         */
        public DirectDebitModel build() {
            return new DirectDebitModel(accountId, mandateIdentification, name, directDebitId,
                    directDebitStatusCode, previousPaymentDateTime, previousPaymentAmount);
        }
    }
}
