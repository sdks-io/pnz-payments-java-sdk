/*
 * AccountAndTransactionAPISpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package nz.co.middleware.apicentre.apinomatls.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for BeneficiaryModel type.
 */
public class BeneficiaryModel {
    private String accountId;
    private String beneficiaryId;
    private Reference reference;
    private CreditorAgent creditorAgent;
    private CreditorAccount creditorAccount;

    /**
     * Default constructor.
     */
    public BeneficiaryModel() {
    }

    /**
     * Initialization constructor.
     * @param  accountId  String value for accountId.
     * @param  beneficiaryId  String value for beneficiaryId.
     * @param  reference  Reference value for reference.
     * @param  creditorAgent  CreditorAgent value for creditorAgent.
     * @param  creditorAccount  CreditorAccount value for creditorAccount.
     */
    public BeneficiaryModel(
            String accountId,
            String beneficiaryId,
            Reference reference,
            CreditorAgent creditorAgent,
            CreditorAccount creditorAccount) {
        this.accountId = accountId;
        this.beneficiaryId = beneficiaryId;
        this.reference = reference;
        this.creditorAgent = creditorAgent;
        this.creditorAccount = creditorAccount;
    }

    /**
     * Getter for AccountId.
     * A unique and immutable identifier used to identify the account resource. This identifier has
     * no meaning to the account owner.
     * @return Returns the String
     */
    @JsonGetter("AccountId")
    public String getAccountId() {
        return accountId;
    }

    /**
     * Setter for AccountId.
     * A unique and immutable identifier used to identify the account resource. This identifier has
     * no meaning to the account owner.
     * @param accountId Value for String
     */
    @JsonSetter("AccountId")
    public void setAccountId(String accountId) {
        this.accountId = accountId;
    }

    /**
     * Getter for BeneficiaryId.
     * A unique and immutable identifier used to identify the beneficiary resource. This identifier
     * has no meaning to the account owner.
     * @return Returns the String
     */
    @JsonGetter("BeneficiaryId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBeneficiaryId() {
        return beneficiaryId;
    }

    /**
     * Setter for BeneficiaryId.
     * A unique and immutable identifier used to identify the beneficiary resource. This identifier
     * has no meaning to the account owner.
     * @param beneficiaryId Value for String
     */
    @JsonSetter("BeneficiaryId")
    public void setBeneficiaryId(String beneficiaryId) {
        this.beneficiaryId = beneficiaryId;
    }

    /**
     * Getter for Reference.
     * @return Returns the Reference
     */
    @JsonGetter("Reference")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Reference getReference() {
        return reference;
    }

    /**
     * Setter for Reference.
     * @param reference Value for Reference
     */
    @JsonSetter("Reference")
    public void setReference(Reference reference) {
        this.reference = reference;
    }

    /**
     * Getter for CreditorAgent.
     * Party that manages the account on behalf of the account owner, that is manages the
     * registration and booking of entries on the account, calculates balances on the account and
     * provides information about the account. This is the servicer of the beneficiary account.
     * @return Returns the CreditorAgent
     */
    @JsonGetter("CreditorAgent")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CreditorAgent getCreditorAgent() {
        return creditorAgent;
    }

    /**
     * Setter for CreditorAgent.
     * Party that manages the account on behalf of the account owner, that is manages the
     * registration and booking of entries on the account, calculates balances on the account and
     * provides information about the account. This is the servicer of the beneficiary account.
     * @param creditorAgent Value for CreditorAgent
     */
    @JsonSetter("CreditorAgent")
    public void setCreditorAgent(CreditorAgent creditorAgent) {
        this.creditorAgent = creditorAgent;
    }

    /**
     * Getter for CreditorAccount.
     * Unambiguous identification of the account of the creditor, in the case of a debit
     * transaction.
     * @return Returns the CreditorAccount
     */
    @JsonGetter("CreditorAccount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CreditorAccount getCreditorAccount() {
        return creditorAccount;
    }

    /**
     * Setter for CreditorAccount.
     * Unambiguous identification of the account of the creditor, in the case of a debit
     * transaction.
     * @param creditorAccount Value for CreditorAccount
     */
    @JsonSetter("CreditorAccount")
    public void setCreditorAccount(CreditorAccount creditorAccount) {
        this.creditorAccount = creditorAccount;
    }

    /**
     * Converts this BeneficiaryModel into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "BeneficiaryModel [" + "accountId=" + accountId + ", beneficiaryId=" + beneficiaryId
                + ", reference=" + reference + ", creditorAgent=" + creditorAgent
                + ", creditorAccount=" + creditorAccount + "]";
    }

    /**
     * Builds a new {@link BeneficiaryModel.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link BeneficiaryModel.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(accountId)
                .beneficiaryId(getBeneficiaryId())
                .reference(getReference())
                .creditorAgent(getCreditorAgent())
                .creditorAccount(getCreditorAccount());
        return builder;
    }

    /**
     * Class to build instances of {@link BeneficiaryModel}.
     */
    public static class Builder {
        private String accountId;
        private String beneficiaryId;
        private Reference reference;
        private CreditorAgent creditorAgent;
        private CreditorAccount creditorAccount;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  accountId  String value for accountId.
         */
        public Builder(String accountId) {
            this.accountId = accountId;
        }

        /**
         * Setter for accountId.
         * @param  accountId  String value for accountId.
         * @return Builder
         */
        public Builder accountId(String accountId) {
            this.accountId = accountId;
            return this;
        }

        /**
         * Setter for beneficiaryId.
         * @param  beneficiaryId  String value for beneficiaryId.
         * @return Builder
         */
        public Builder beneficiaryId(String beneficiaryId) {
            this.beneficiaryId = beneficiaryId;
            return this;
        }

        /**
         * Setter for reference.
         * @param  reference  Reference value for reference.
         * @return Builder
         */
        public Builder reference(Reference reference) {
            this.reference = reference;
            return this;
        }

        /**
         * Setter for creditorAgent.
         * @param  creditorAgent  CreditorAgent value for creditorAgent.
         * @return Builder
         */
        public Builder creditorAgent(CreditorAgent creditorAgent) {
            this.creditorAgent = creditorAgent;
            return this;
        }

        /**
         * Setter for creditorAccount.
         * @param  creditorAccount  CreditorAccount value for creditorAccount.
         * @return Builder
         */
        public Builder creditorAccount(CreditorAccount creditorAccount) {
            this.creditorAccount = creditorAccount;
            return this;
        }

        /**
         * Builds a new {@link BeneficiaryModel} object using the set fields.
         * @return {@link BeneficiaryModel}
         */
        public BeneficiaryModel build() {
            return new BeneficiaryModel(accountId, beneficiaryId, reference, creditorAgent,
                    creditorAccount);
        }
    }
}
